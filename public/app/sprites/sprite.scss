// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-left-name: 'arrow-left';
$arrow-left-x: 0px;
$arrow-left-y: 20px;
$arrow-left-offset-x: 0px;
$arrow-left-offset-y: -20px;
$arrow-left-width: 18px;
$arrow-left-height: 25px;
$arrow-left-total-width: 63px;
$arrow-left-total-height: 57px;
$arrow-left-image: 'sprite.png';
$arrow-left: (0px, 20px, 0px, -20px, 18px, 25px, 63px, 57px, 'sprite.png', 'arrow-left', );
$arrow-right-name: 'arrow-right';
$arrow-right-x: 26px;
$arrow-right-y: 0px;
$arrow-right-offset-x: -26px;
$arrow-right-offset-y: 0px;
$arrow-right-width: 18px;
$arrow-right-height: 25px;
$arrow-right-total-width: 63px;
$arrow-right-total-height: 57px;
$arrow-right-image: 'sprite.png';
$arrow-right: (26px, 0px, -26px, 0px, 18px, 25px, 63px, 57px, 'sprite.png', 'arrow-right', );
$company-icon-name: 'company-icon';
$company-icon-x: 26px;
$company-icon-y: 25px;
$company-icon-offset-x: -26px;
$company-icon-offset-y: -25px;
$company-icon-width: 14px;
$company-icon-height: 12px;
$company-icon-total-width: 63px;
$company-icon-total-height: 57px;
$company-icon-image: 'sprite.png';
$company-icon: (26px, 25px, -26px, -25px, 14px, 12px, 63px, 57px, 'sprite.png', 'company-icon', );
$contact-icon-name: 'contact-icon';
$contact-icon-x: 27px;
$contact-icon-y: 45px;
$contact-icon-offset-x: -27px;
$contact-icon-offset-y: -45px;
$contact-icon-width: 11px;
$contact-icon-height: 12px;
$contact-icon-total-width: 63px;
$contact-icon-total-height: 57px;
$contact-icon-image: 'sprite.png';
$contact-icon: (27px, 45px, -27px, -45px, 11px, 12px, 63px, 57px, 'sprite.png', 'contact-icon', );
$gallery-icon-name: 'gallery-icon';
$gallery-icon-x: 0px;
$gallery-icon-y: 45px;
$gallery-icon-offset-x: 0px;
$gallery-icon-offset-y: -45px;
$gallery-icon-width: 14px;
$gallery-icon-height: 12px;
$gallery-icon-total-width: 63px;
$gallery-icon-total-height: 57px;
$gallery-icon-image: 'sprite.png';
$gallery-icon: (0px, 45px, 0px, -45px, 14px, 12px, 63px, 57px, 'sprite.png', 'gallery-icon', );
$home-icon-name: 'home-icon';
$home-icon-x: 14px;
$home-icon-y: 45px;
$home-icon-offset-x: -14px;
$home-icon-offset-y: -45px;
$home-icon-width: 13px;
$home-icon-height: 12px;
$home-icon-total-width: 63px;
$home-icon-total-height: 57px;
$home-icon-image: 'sprite.png';
$home-icon: (14px, 45px, -14px, -45px, 13px, 12px, 63px, 57px, 'sprite.png', 'home-icon', );
$menu-icon-name: 'menu-icon';
$menu-icon-x: 0px;
$menu-icon-y: 0px;
$menu-icon-offset-x: 0px;
$menu-icon-offset-y: 0px;
$menu-icon-width: 26px;
$menu-icon-height: 20px;
$menu-icon-total-width: 63px;
$menu-icon-total-height: 57px;
$menu-icon-image: 'sprite.png';
$menu-icon: (0px, 0px, 0px, 0px, 26px, 20px, 63px, 57px, 'sprite.png', 'menu-icon', );
$phone-icon-name: 'phone-icon';
$phone-icon-x: 44px;
$phone-icon-y: 20px;
$phone-icon-offset-x: -44px;
$phone-icon-offset-y: -20px;
$phone-icon-width: 17px;
$phone-icon-height: 17px;
$phone-icon-total-width: 63px;
$phone-icon-total-height: 57px;
$phone-icon-image: 'sprite.png';
$phone-icon: (44px, 20px, -44px, -20px, 17px, 17px, 63px, 57px, 'sprite.png', 'phone-icon', );
$sale-icon-name: 'sale-icon';
$sale-icon-x: 38px;
$sale-icon-y: 45px;
$sale-icon-offset-x: -38px;
$sale-icon-offset-y: -45px;
$sale-icon-width: 11px;
$sale-icon-height: 11px;
$sale-icon-total-width: 63px;
$sale-icon-total-height: 57px;
$sale-icon-image: 'sprite.png';
$sale-icon: (38px, 45px, -38px, -45px, 11px, 11px, 63px, 57px, 'sprite.png', 'sale-icon', );
$search-icon-name: 'search-icon';
$search-icon-x: 44px;
$search-icon-y: 0px;
$search-icon-offset-x: -44px;
$search-icon-offset-y: 0px;
$search-icon-width: 19px;
$search-icon-height: 20px;
$search-icon-total-width: 63px;
$search-icon-total-height: 57px;
$search-icon-image: 'sprite.png';
$search-icon: (44px, 0px, -44px, 0px, 19px, 20px, 63px, 57px, 'sprite.png', 'search-icon', );
$spritesheet-width: 63px;
$spritesheet-height: 57px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($arrow-left, $arrow-right, $company-icon, $contact-icon, $gallery-icon, $home-icon, $menu-icon, $phone-icon, $sale-icon, $search-icon, );
$spritesheet: (63px, 57px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(../sprites/#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
