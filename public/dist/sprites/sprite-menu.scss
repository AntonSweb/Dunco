// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$call-icon-name: 'call-icon';
$call-icon-x: 87px;
$call-icon-y: 38px;
$call-icon-offset-x: -87px;
$call-icon-offset-y: -38px;
$call-icon-width: 33px;
$call-icon-height: 37px;
$call-icon-total-width: 120px;
$call-icon-total-height: 110px;
$call-icon-image: 'sprite-menu.png';
$call-icon: (87px, 38px, -87px, -38px, 33px, 37px, 120px, 110px, 'sprite-menu.png', 'call-icon', );
$contract-icon-name: 'contract-icon';
$contract-icon-x: 0px;
$contract-icon-y: 75px;
$contract-icon-offset-x: 0px;
$contract-icon-offset-y: -75px;
$contract-icon-width: 28px;
$contract-icon-height: 35px;
$contract-icon-total-width: 120px;
$contract-icon-total-height: 110px;
$contract-icon-image: 'sprite-menu.png';
$contract-icon: (0px, 75px, 0px, -75px, 28px, 35px, 120px, 110px, 'sprite-menu.png', 'contract-icon', );
$doors-icon-name: 'doors-icon';
$doors-icon-x: 0px;
$doors-icon-y: 38px;
$doors-icon-offset-x: 0px;
$doors-icon-offset-y: -38px;
$doors-icon-width: 34px;
$doors-icon-height: 37px;
$doors-icon-total-width: 120px;
$doors-icon-total-height: 110px;
$doors-icon-image: 'sprite-menu.png';
$doors-icon: (0px, 38px, 0px, -38px, 34px, 37px, 120px, 110px, 'sprite-menu.png', 'doors-icon', );
$gate-icon-name: 'gate-icon';
$gate-icon-x: 0px;
$gate-icon-y: 0px;
$gate-icon-offset-x: 0px;
$gate-icon-offset-y: 0px;
$gate-icon-width: 51px;
$gate-icon-height: 38px;
$gate-icon-total-width: 120px;
$gate-icon-total-height: 110px;
$gate-icon-image: 'sprite-menu.png';
$gate-icon: (0px, 0px, 0px, 0px, 51px, 38px, 120px, 110px, 'sprite-menu.png', 'gate-icon', );
$jalousie-icon-name: 'jalousie-icon';
$jalousie-icon-x: 87px;
$jalousie-icon-y: 0px;
$jalousie-icon-offset-x: -87px;
$jalousie-icon-offset-y: 0px;
$jalousie-icon-width: 33px;
$jalousie-icon-height: 38px;
$jalousie-icon-total-width: 120px;
$jalousie-icon-total-height: 110px;
$jalousie-icon-image: 'sprite-menu.png';
$jalousie-icon: (87px, 0px, -87px, 0px, 33px, 38px, 120px, 110px, 'sprite-menu.png', 'jalousie-icon', );
$roller-icon-name: 'roller-icon';
$roller-icon-x: 51px;
$roller-icon-y: 0px;
$roller-icon-offset-x: -51px;
$roller-icon-offset-y: 0px;
$roller-icon-width: 36px;
$roller-icon-height: 35px;
$roller-icon-total-width: 120px;
$roller-icon-total-height: 110px;
$roller-icon-image: 'sprite-menu.png';
$roller-icon: (51px, 0px, -51px, 0px, 36px, 35px, 120px, 110px, 'sprite-menu.png', 'roller-icon', );
$window-icon-name: 'window-icon';
$window-icon-x: 34px;
$window-icon-y: 38px;
$window-icon-offset-x: -34px;
$window-icon-offset-y: -38px;
$window-icon-width: 34px;
$window-icon-height: 36px;
$window-icon-total-width: 120px;
$window-icon-total-height: 110px;
$window-icon-image: 'sprite-menu.png';
$window-icon: (34px, 38px, -34px, -38px, 34px, 36px, 120px, 110px, 'sprite-menu.png', 'window-icon', );
$spritesheet-width: 120px;
$spritesheet-height: 110px;
$spritesheet-image: 'sprite-menu.png';
$spritesheet-sprites: ($call-icon, $contract-icon, $doors-icon, $gate-icon, $jalousie-icon, $roller-icon, $window-icon, );
$spritesheet: (120px, 110px, 'sprite-menu.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(../sprites/#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
